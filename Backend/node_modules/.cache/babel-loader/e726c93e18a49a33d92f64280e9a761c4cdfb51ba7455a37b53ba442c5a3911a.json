{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\RFID-Based-Attendance-System\\\\frontend\\\\src\\\\components\\\\pagination\\\\Pagination.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./pagination.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pagination({\n  nPages,\n  currentPage,\n  setCurrentPage,\n  itemsPerPage = 100\n}) {\n  _s();\n  const [pageInput, setPageInput] = useState(currentPage);\n\n  // Calculate visible page numbers with truncation\n  const getVisiblePages = () => {\n    const visiblePages = [];\n    const maxVisiblePages = 5; // Adjust this number to show more/less pages\n    let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n    let endPage = startPage + maxVisiblePages - 1;\n    if (endPage > nPages) {\n      endPage = nPages;\n      startPage = Math.max(1, endPage - maxVisiblePages + 1);\n    }\n\n    // Always show first page\n    if (startPage > 1) {\n      visiblePages.push(1);\n      if (startPage > 2) visiblePages.push('...');\n    }\n\n    // Add middle pages\n    for (let i = startPage; i <= endPage; i++) {\n      visiblePages.push(i);\n    }\n\n    // Always show last page\n    if (endPage < nPages) {\n      if (endPage < nPages - 1) visiblePages.push('...');\n      visiblePages.push(nPages);\n    }\n    return visiblePages;\n  };\n  const handlePageChange = newPage => {\n    if (newPage >= 1 && newPage <= nPages) {\n      setCurrentPage(newPage);\n    }\n  };\n  const handlePageInput = e => {\n    e.preventDefault();\n    const page = parseInt(pageInput);\n    if (!isNaN(page) && page >= 1 && page <= nPages) {\n      setCurrentPage(page);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pagination-arrow\",\n      disabled: currentPage === 1,\n      onClick: () => handlePageChange(currentPage - 1),\n      \"aria-label\": \"Previous page\",\n      children: \"\\u27E8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), getVisiblePages().map((pgNumber, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `pagination-number ${currentPage === pgNumber ? \"active\" : \"\"}`,\n      disabled: pgNumber === '...',\n      onClick: () => typeof pgNumber === 'number' && handlePageChange(pgNumber),\n      children: pgNumber\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pagination-arrow\",\n      disabled: currentPage === nPages,\n      onClick: () => handlePageChange(currentPage + 1),\n      \"aria-label\": \"Next page\",\n      children: \"\\u27E9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-jump\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePageInput,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: nPages,\n          value: pageInput,\n          onChange: e => setPageInput(e.target.value),\n          \"aria-label\": \"Page number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Go\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-info\",\n      children: [\"Page \", currentPage, \" of \", nPages, \" (\", itemsPerPage, \" items per page)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Pagination, \"lh3N4KY7ww6m9Vcu2BVPu/KvPkQ=\");\n_c = Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Pagination","nPages","currentPage","setCurrentPage","itemsPerPage","_s","pageInput","setPageInput","getVisiblePages","visiblePages","maxVisiblePages","startPage","Math","max","floor","endPage","push","i","handlePageChange","newPage","handlePageInput","e","preventDefault","page","parseInt","isNaN","className","children","disabled","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","pgNumber","index","onSubmit","type","min","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/project/RFID-Based-Attendance-System/frontend/src/components/pagination/Pagination.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./pagination.css\";\r\n\r\nexport default function Pagination({ \r\n  nPages, \r\n  currentPage, \r\n  setCurrentPage,\r\n  itemsPerPage = 100 \r\n}) {\r\n  const [pageInput, setPageInput] = useState(currentPage);\r\n\r\n  // Calculate visible page numbers with truncation\r\n  const getVisiblePages = () => {\r\n    const visiblePages = [];\r\n    const maxVisiblePages = 5; // Adjust this number to show more/less pages\r\n    let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\r\n    let endPage = startPage + maxVisiblePages - 1;\r\n\r\n    if (endPage > nPages) {\r\n      endPage = nPages;\r\n      startPage = Math.max(1, endPage - maxVisiblePages + 1);\r\n    }\r\n\r\n    // Always show first page\r\n    if (startPage > 1) {\r\n      visiblePages.push(1);\r\n      if (startPage > 2) visiblePages.push('...');\r\n    }\r\n\r\n    // Add middle pages\r\n    for (let i = startPage; i <= endPage; i++) {\r\n      visiblePages.push(i);\r\n    }\r\n\r\n    // Always show last page\r\n    if (endPage < nPages) {\r\n      if (endPage < nPages - 1) visiblePages.push('...');\r\n      visiblePages.push(nPages);\r\n    }\r\n\r\n    return visiblePages;\r\n  };\r\n\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage >= 1 && newPage <= nPages) {\r\n      setCurrentPage(newPage);\r\n    }\r\n  };\r\n\r\n  const handlePageInput = (e) => {\r\n    e.preventDefault();\r\n    const page = parseInt(pageInput);\r\n    if (!isNaN(page) && page >= 1 && page <= nPages) {\r\n      setCurrentPage(page);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagination-container\">\r\n      <button\r\n        className=\"pagination-arrow\"\r\n        disabled={currentPage === 1}\r\n        onClick={() => handlePageChange(currentPage - 1)}\r\n        aria-label=\"Previous page\"\r\n      >\r\n        ⟨\r\n      </button>\r\n\r\n      {getVisiblePages().map((pgNumber, index) => (\r\n        <button\r\n          key={index}\r\n          className={`pagination-number ${currentPage === pgNumber ? \"active\" : \"\"}`}\r\n          disabled={pgNumber === '...'}\r\n          onClick={() => typeof pgNumber === 'number' && handlePageChange(pgNumber)}\r\n        >\r\n          {pgNumber}\r\n        </button>\r\n      ))}\r\n\r\n      <button\r\n        className=\"pagination-arrow\"\r\n        disabled={currentPage === nPages}\r\n        onClick={() => handlePageChange(currentPage + 1)}\r\n        aria-label=\"Next page\"\r\n      >\r\n        ⟩\r\n      </button>\r\n\r\n      <div className=\"page-jump\">\r\n        <form onSubmit={handlePageInput}>\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            max={nPages}\r\n            value={pageInput}\r\n            onChange={(e) => setPageInput(e.target.value)}\r\n            aria-label=\"Page number\"\r\n          />\r\n          <button type=\"submit\">Go</button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"page-info\">\r\n        Page {currentPage} of {nPages} ({itemsPerPage} items per page)\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}