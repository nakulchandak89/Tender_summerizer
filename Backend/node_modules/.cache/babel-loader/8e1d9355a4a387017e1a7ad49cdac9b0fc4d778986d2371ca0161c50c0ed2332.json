{"ast":null,"code":"import axios from\"axios\";import React,{useState,useCallback,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import Header from\"../../components/header/Header\";import Message from\"../../components/message/Message\";import\"./add.css\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Add(){const navigate=useNavigate();const[employee,setEmployee]=useState({employeeId:\"\",firstName:\"\",lastName:\"\",department:\"\",rfidBadgeNumber:\"\"});const[file,setFile]=useState(null);const[previewURL,setPreviewURL]=useState(null);const[message,setMessage]=useState({show:false,msg:\"\",type:\"\"});const[isFormDirty,setIsFormDirty]=useState(false);const[employeeIdError,setEmployeeIdError]=useState(\"\");const[rfidError,setRfidError]=useState(\"\");// Store RFID Badge Number validation error\nconst[existingEmployeeError,setExistingEmployeeError]=useState(\"\");// ✅ Function to show messages with auto-dismiss\nconst showMessage=useCallback(function(){let show=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"\";let msg=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"\";setMessage({show,type,msg});if(show){setTimeout(()=>setMessage({show:false,msg:\"\",type:\"\"}),3000);}},[]);// ✅ Handle input field changes\nconst updateEmployee=e=>{const{name,value}=e.target;// Employee ID Validation (Only Numbers & 4 Digits)\nif(name===\"employeeId\"){if(!/^\\d{0,4}$/.test(value)){setEmployeeIdError(\"Employee ID must be exactly 4 numeric digits.\");}else{setEmployeeIdError(\"\");checkIfEmployeeExists(value);}}// RFID Badge Number Validation (4 Alphanumeric Characters, No Whitespaces)\nif(name===\"rfidBadgeNumber\"){const rfidPattern=/^[A-Za-z0-9]{4}$/;if(!rfidPattern.test(value)){setRfidError(\"RFID Badge Number must be exactly 4 alphanumeric characters, no spaces.\");}else{setRfidError(\"\");checkIfRfidExists(value);}}setEmployee(prev=>({...prev,[name]:value}));setIsFormDirty(true);};// ✅ Check if Employee ID Already Exists\nconst checkIfEmployeeExists=async employeeId=>{try{if(employeeId.length===4){const res=await axios.get(`http://localhost:5000/api/employees/check-id/${employeeId}`);if(res.data.exists){setExistingEmployeeError(\"❌ Employee ID already exists!\");}else{setExistingEmployeeError(\"\");}}}catch(error){console.error(\"❌ Error checking Employee ID:\",error);}};// ✅ Check if RFID Badge Number Already Exists\nconst checkIfRfidExists=async rfidBadgeNumber=>{try{if(rfidBadgeNumber.length===4){const res=await axios.get(`http://localhost:5000/api/employees/check-rfid/${rfidBadgeNumber}`);if(res.data.exists){setRfidError(\"❌ RFID Badge Number already exists!\");}else{setRfidError(\"\");}}}catch(error){console.error(\"❌ Error checking RFID Badge Number:\",error);}};// ✅ Handle file input changes (Profile Picture)\nconst handleFileChange=e=>{const newFile=e.target.files[0];if(newFile){const validTypes=[\"image/jpeg\",\"image/png\",\"image/gif\"];const maxSize=200*1024;// 200KB max file size\nif(!validTypes.includes(newFile.type)){showMessage(true,\"error\",\"Only image files are allowed (JPEG, PNG, GIF).\");return;}if(newFile.size>maxSize){showMessage(true,\"error\",\"File size must be under 200KB.\");return;}const confirmWhiteBg=window.confirm(\"Is the image background white?\");if(!confirmWhiteBg){showMessage(true,\"error\",\"Please upload an image with a white background.\");return;}setFile(newFile);setPreviewURL(URL.createObjectURL(newFile));}};// ✅ Clean up preview URL to prevent memory leaks\nuseEffect(()=>{return()=>{if(previewURL){URL.revokeObjectURL(previewURL);}};},[previewURL]);// ✅ Handle form submission\nconst handleSubmit=async e=>{e.preventDefault();// Prevent submission if Employee ID or RFID Badge Number is invalid or exists\nif(employeeIdError||rfidError||existingEmployeeError){showMessage(true,\"error\",\"❌ Please fix the errors before submitting.\");return;}if(!employee.employeeId||!employee.firstName||!employee.lastName||!employee.department){showMessage(true,\"error\",\"⚠️ Please fill in all required fields.\");return;}const employeeData=new FormData();Object.entries(employee).forEach(_ref=>{let[key,value]=_ref;employeeData.append(key,value);});if(file){employeeData.append(\"file\",file);}try{const response=await axios.post(\"http://localhost:5000/api/employees\",employeeData,{headers:{\"Content-Type\":\"multipart/form-data\"}});showMessage(true,\"success\",\"✅ Successfully added employee!\");console.log(\"✅ Server Response:\",response.data);// Reset form fields after success\nsetEmployee({employeeId:\"\",firstName:\"\",lastName:\"\",department:\"\",rfidBadgeNumber:\"\"});setFile(null);setPreviewURL(null);}catch(error){var _error$response,_error$response$data;console.error(\"❌ Error adding employee:\",error);const errorMsg=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||\"❌ Failed to add employee. Please try again.\";showMessage(true,\"error\",errorMsg);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"div\",{className:\"header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Add Employee\"})}),/*#__PURE__*/_jsx(\"section\",{className:\"managePage\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"editForm\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"fields\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"imgColumn\",children:[/*#__PURE__*/_jsx(\"img\",{src:previewURL||\"http://localhost:5000/images/defaultPic.png\",alt:\"Profile Pic\"}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"fileInput\",className:\"fileUploadLabel\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-circle-plus addProfileIcon\"}),/*#__PURE__*/_jsx(\"span\",{children:\" Add Profile Pic\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"fileInput\",onChange:handleFileChange,style:{display:\"none\"}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"fieldsColumn\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"fieldRow\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"fieldLabel\",children:\"Employee ID\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"employeeId\",value:employee.employeeId,onChange:updateEmployee,className:\"addInputs\"}),employeeIdError&&/*#__PURE__*/_jsx(\"p\",{className:\"error-msg\",children:employeeIdError}),existingEmployeeError&&/*#__PURE__*/_jsx(\"p\",{className:\"error-msg\",children:existingEmployeeError})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"fieldRow\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"fieldLabel\",children:\"First Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"firstName\",value:employee.firstName,onChange:updateEmployee,className:\"addInputs\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"fieldRow\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"fieldLabel\",children:\"Last Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"lastName\",value:employee.lastName,onChange:updateEmployee,className:\"addInputs\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"fieldRow\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"fieldLabel\",children:\"Department\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"department\",value:employee.department,onChange:updateEmployee,className:\"addInputs\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Department\"}),[\"Computer Science\",\"Electrical\",\"Mechanical\",\"Civil\",\"Electronics\"].map(dept=>/*#__PURE__*/_jsx(\"option\",{value:dept,children:dept},dept))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"fieldRow\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"fieldLabel\",children:\"RFID Badge Number\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"rfidBadgeNumber\",value:employee.rfidBadgeNumber,onChange:updateEmployee,className:\"addInputs\"}),rfidError&&/*#__PURE__*/_jsx(\"p\",{className:\"error-msg\",children:rfidError})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btnContainer\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"bottomButton\",children:\"Add\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"bottomButton\",onClick:()=>navigate(\"/\"),children:\"Back\"})]}),message.show&&/*#__PURE__*/_jsx(Message,{...message,removeMessage:showMessage})]})})]});}","map":{"version":3,"names":["axios","React","useState","useCallback","useEffect","useNavigate","Header","Message","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Add","navigate","employee","setEmployee","employeeId","firstName","lastName","department","rfidBadgeNumber","file","setFile","previewURL","setPreviewURL","message","setMessage","show","msg","type","isFormDirty","setIsFormDirty","employeeIdError","setEmployeeIdError","rfidError","setRfidError","existingEmployeeError","setExistingEmployeeError","showMessage","arguments","length","undefined","setTimeout","updateEmployee","e","name","value","target","test","checkIfEmployeeExists","rfidPattern","checkIfRfidExists","prev","res","get","data","exists","error","console","handleFileChange","newFile","files","validTypes","maxSize","includes","size","confirmWhiteBg","window","confirm","URL","createObjectURL","revokeObjectURL","handleSubmit","preventDefault","employeeData","FormData","Object","entries","forEach","_ref","key","append","response","post","headers","log","_error$response","_error$response$data","errorMsg","children","className","onSubmit","src","alt","htmlFor","id","onChange","style","display","map","dept","onClick","removeMessage"],"sources":["D:/project/RFID-Based-Attendance-System/frontend/src/pages/add/Add.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Header from \"../../components/header/Header\";\r\nimport Message from \"../../components/message/Message\";\r\nimport \"./add.css\";\r\n\r\nexport default function Add() {\r\n  const navigate = useNavigate();\r\n\r\n  const [employee, setEmployee] = useState({\r\n    employeeId: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    department: \"\",\r\n    rfidBadgeNumber: \"\",\r\n  });\r\n\r\n  const [file, setFile] = useState(null);\r\n  const [previewURL, setPreviewURL] = useState(null);\r\n  const [message, setMessage] = useState({ show: false, msg: \"\", type: \"\" });\r\n  const [isFormDirty, setIsFormDirty] = useState(false);\r\n  const [employeeIdError, setEmployeeIdError] = useState(\"\"); \r\n  const [rfidError, setRfidError] = useState(\"\"); // Store RFID Badge Number validation error\r\n  const [existingEmployeeError, setExistingEmployeeError] = useState(\"\"); \r\n\r\n  // ✅ Function to show messages with auto-dismiss\r\n  const showMessage = useCallback((show = false, type = \"\", msg = \"\") => {\r\n    setMessage({ show, type, msg });\r\n    if (show) {\r\n      setTimeout(() => setMessage({ show: false, msg: \"\", type: \"\" }), 3000);\r\n    }\r\n  }, []);\r\n\r\n  // ✅ Handle input field changes\r\n  const updateEmployee = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    // Employee ID Validation (Only Numbers & 4 Digits)\r\n    if (name === \"employeeId\") {\r\n      if (!/^\\d{0,4}$/.test(value)) {\r\n        setEmployeeIdError(\"Employee ID must be exactly 4 numeric digits.\");\r\n      } else {\r\n        setEmployeeIdError(\"\");\r\n        checkIfEmployeeExists(value);\r\n      }\r\n    }\r\n\r\n    // RFID Badge Number Validation (4 Alphanumeric Characters, No Whitespaces)\r\n    if (name === \"rfidBadgeNumber\") {\r\n      const rfidPattern = /^[A-Za-z0-9]{4}$/;\r\n      if (!rfidPattern.test(value)) {\r\n        setRfidError(\"RFID Badge Number must be exactly 4 alphanumeric characters, no spaces.\");\r\n      } else {\r\n        setRfidError(\"\");\r\n        checkIfRfidExists(value);\r\n      }\r\n    }\r\n\r\n    setEmployee((prev) => ({ ...prev, [name]: value }));\r\n    setIsFormDirty(true);\r\n  };\r\n\r\n  // ✅ Check if Employee ID Already Exists\r\n  const checkIfEmployeeExists = async (employeeId) => {\r\n    try {\r\n      if (employeeId.length === 4) {\r\n        const res = await axios.get(`http://localhost:5000/api/employees/check-id/${employeeId}`);\r\n        if (res.data.exists) {\r\n          setExistingEmployeeError(\"❌ Employee ID already exists!\");\r\n        } else {\r\n          setExistingEmployeeError(\"\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Error checking Employee ID:\", error);\r\n    }\r\n  };\r\n\r\n  // ✅ Check if RFID Badge Number Already Exists\r\n  const checkIfRfidExists = async (rfidBadgeNumber) => {\r\n    try {\r\n      if (rfidBadgeNumber.length === 4) {\r\n        const res = await axios.get(`http://localhost:5000/api/employees/check-rfid/${rfidBadgeNumber}`);\r\n        if (res.data.exists) {\r\n          setRfidError(\"❌ RFID Badge Number already exists!\");\r\n        } else {\r\n          setRfidError(\"\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Error checking RFID Badge Number:\", error);\r\n    }\r\n  };\r\n\r\n  // ✅ Handle file input changes (Profile Picture)\r\n  const handleFileChange = (e) => {\r\n    const newFile = e.target.files[0];\r\n    if (newFile) {\r\n      const validTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\r\n      const maxSize = 200 * 1024; // 200KB max file size\r\n\r\n      if (!validTypes.includes(newFile.type)) {\r\n        showMessage(true, \"error\", \"Only image files are allowed (JPEG, PNG, GIF).\");\r\n        return;\r\n      }\r\n      if (newFile.size > maxSize) {\r\n        showMessage(true, \"error\", \"File size must be under 200KB.\");\r\n        return;\r\n      }\r\n\r\n      const confirmWhiteBg = window.confirm(\"Is the image background white?\");\r\n      if (!confirmWhiteBg) {\r\n        showMessage(true, \"error\", \"Please upload an image with a white background.\");\r\n        return;\r\n      }\r\n\r\n      setFile(newFile);\r\n      setPreviewURL(URL.createObjectURL(newFile));\r\n    }\r\n  };\r\n\r\n  // ✅ Clean up preview URL to prevent memory leaks\r\n  useEffect(() => {\r\n    return () => {\r\n      if (previewURL) {\r\n        URL.revokeObjectURL(previewURL);\r\n      }\r\n    };\r\n  }, [previewURL]);\r\n\r\n  // ✅ Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Prevent submission if Employee ID or RFID Badge Number is invalid or exists\r\n    if (employeeIdError || rfidError || existingEmployeeError) {\r\n      showMessage(true, \"error\", \"❌ Please fix the errors before submitting.\");\r\n      return;\r\n    }\r\n\r\n    if (!employee.employeeId || !employee.firstName || !employee.lastName || !employee.department) {\r\n      showMessage(true, \"error\", \"⚠️ Please fill in all required fields.\");\r\n      return;\r\n    }\r\n\r\n    const employeeData = new FormData();\r\n    Object.entries(employee).forEach(([key, value]) => {\r\n      employeeData.append(key, value);\r\n    });\r\n\r\n    if (file) {\r\n      employeeData.append(\"file\", file);\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/employees\", employeeData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      showMessage(true, \"success\", \"✅ Successfully added employee!\");\r\n      console.log(\"✅ Server Response:\", response.data);\r\n\r\n      // Reset form fields after success\r\n      setEmployee({\r\n        employeeId: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        department: \"\",\r\n        rfidBadgeNumber: \"\",\r\n      });\r\n      setFile(null);\r\n      setPreviewURL(null);\r\n    } catch (error) {\r\n      console.error(\"❌ Error adding employee:\", error);\r\n      const errorMsg = error.response?.data?.message || \"❌ Failed to add employee. Please try again.\";\r\n      showMessage(true, \"error\", errorMsg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"header\">\r\n        <h1>Add Employee</h1>\r\n      </div>\r\n      <section className=\"managePage\">\r\n        <form className=\"editForm\" onSubmit={handleSubmit}>\r\n          <div className=\"fields\">\r\n            <div className=\"imgColumn\">\r\n              <img src={previewURL || \"http://localhost:5000/images/defaultPic.png\"} alt=\"Profile Pic\" />\r\n              <label htmlFor=\"fileInput\" className=\"fileUploadLabel\">\r\n                <i className=\"fa-solid fa-circle-plus addProfileIcon\"></i>\r\n                <span> Add Profile Pic</span>\r\n              </label>\r\n              <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} style={{ display: \"none\" }} />\r\n            </div>\r\n            <div className=\"fieldsColumn\">\r\n              <div className=\"fieldRow\">\r\n                <label className=\"fieldLabel\">Employee ID</label>\r\n                <input type=\"text\" name=\"employeeId\" value={employee.employeeId} onChange={updateEmployee} className=\"addInputs\" />\r\n                {employeeIdError && <p className=\"error-msg\">{employeeIdError}</p>}\r\n                {existingEmployeeError && <p className=\"error-msg\">{existingEmployeeError}</p>}\r\n              </div>\r\n\r\n              <div className=\"fieldRow\">\r\n                <label className=\"fieldLabel\">First Name</label>\r\n                <input type=\"text\" name=\"firstName\" value={employee.firstName} onChange={updateEmployee} className=\"addInputs\" />\r\n              </div>\r\n\r\n              <div className=\"fieldRow\">\r\n                <label className=\"fieldLabel\">Last Name</label>\r\n                <input type=\"text\" name=\"lastName\" value={employee.lastName} onChange={updateEmployee} className=\"addInputs\" />\r\n              </div>\r\n\r\n              <div className=\"fieldRow\">\r\n                <label className=\"fieldLabel\">Department</label>\r\n                <select name=\"department\" value={employee.department} onChange={updateEmployee} className=\"addInputs\">\r\n                  <option value=\"\">Select Department</option>\r\n                  {[\"Computer Science\", \"Electrical\", \"Mechanical\", \"Civil\", \"Electronics\"].map((dept) => (\r\n                    <option key={dept} value={dept}>{dept}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"fieldRow\">\r\n                <label className=\"fieldLabel\">RFID Badge Number</label>\r\n                <input type=\"text\" name=\"rfidBadgeNumber\" value={employee.rfidBadgeNumber} onChange={updateEmployee} className=\"addInputs\" />\r\n                {rfidError && <p className=\"error-msg\">{rfidError}</p>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"btnContainer\">\r\n            <button type=\"submit\" className=\"bottomButton\">Add</button>\r\n            <button type=\"button\" className=\"bottomButton\" onClick={() => navigate(\"/\")}>Back</button>\r\n          </div>\r\n          {message.show && <Message {...message} removeMessage={showMessage} />}\r\n        </form>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}