{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\RFID-Based-Attendance-System\\\\frontend\\\\src\\\\pages\\\\add\\\\Add.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Header from \"../../components/header/Header\";\nimport Message from \"../../components/message/Message\";\nimport \"./add.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Add() {\n  _s();\n  const navigate = useNavigate();\n  const [employee, setEmployee] = useState({\n    employeeId: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    department: \"\",\n    rfidBadgeNumber: \"\"\n  });\n  const [file, setFile] = useState(null);\n  const [previewURL, setPreviewURL] = useState(null);\n  const [message, setMessage] = useState({\n    show: false,\n    msg: \"\",\n    type: \"\"\n  });\n  const [isFormDirty, setIsFormDirty] = useState(false);\n  const [employeeIdError, setEmployeeIdError] = useState(\"\");\n  const [rfidError, setRfidError] = useState(\"\"); // Store RFID Badge Number validation error\n  const [existingEmployeeError, setExistingEmployeeError] = useState(\"\");\n\n  // ✅ Function to show messages with auto-dismiss\n  const showMessage = useCallback((show = false, type = \"\", msg = \"\") => {\n    setMessage({\n      show,\n      type,\n      msg\n    });\n    if (show) {\n      setTimeout(() => setMessage({\n        show: false,\n        msg: \"\",\n        type: \"\"\n      }), 3000);\n    }\n  }, []);\n\n  // ✅ Handle input field changes\n  const updateEmployee = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Employee ID Validation (Only Numbers & 4 Digits)\n    if (name === \"employeeId\") {\n      if (!/^\\d{0,4}$/.test(value)) {\n        setEmployeeIdError(\"Employee ID must be exactly 4 numeric digits.\");\n      } else {\n        setEmployeeIdError(\"\");\n        checkIfEmployeeExists(value);\n      }\n    }\n\n    // RFID Badge Number Validation (4 Alphanumeric Characters, No Whitespaces)\n    if (name === \"rfidBadgeNumber\") {\n      const rfidPattern = /^[A-Za-z0-9]{4}$/;\n      if (!rfidPattern.test(value)) {\n        setRfidError(\"RFID Badge Number must be exactly 4 alphanumeric characters, no spaces.\");\n      } else {\n        setRfidError(\"\");\n        checkIfRfidExists(value);\n      }\n    }\n    setEmployee(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setIsFormDirty(true);\n  };\n\n  // ✅ Check if Employee ID Already Exists\n  const checkIfEmployeeExists = async employeeId => {\n    try {\n      if (employeeId.length === 4) {\n        const res = await axios.get(`http://localhost:5000/api/employees/check-id/${employeeId}`);\n        if (res.data.exists) {\n          setExistingEmployeeError(\"❌ Employee ID already exists!\");\n        } else {\n          setExistingEmployeeError(\"\");\n        }\n      }\n    } catch (error) {\n      console.error(\"❌ Error checking Employee ID:\", error);\n    }\n  };\n\n  // ✅ Check if RFID Badge Number Already Exists\n  const checkIfRfidExists = async rfidBadgeNumber => {\n    try {\n      if (rfidBadgeNumber.length === 4) {\n        const res = await axios.get(`http://localhost:5000/api/employees/check-rfid/${rfidBadgeNumber}`);\n        if (res.data.exists) {\n          setRfidError(\"❌ RFID Badge Number already exists!\");\n        } else {\n          setRfidError(\"\");\n        }\n      }\n    } catch (error) {\n      console.error(\"❌ Error checking RFID Badge Number:\", error);\n    }\n  };\n\n  // ✅ Handle file input changes (Profile Picture)\n  const handleFileChange = e => {\n    const newFile = e.target.files[0];\n    if (newFile) {\n      const validTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\n      const maxSize = 200 * 1024; // 200KB max file size\n\n      if (!validTypes.includes(newFile.type)) {\n        showMessage(true, \"error\", \"Only image files are allowed (JPEG, PNG, GIF).\");\n        return;\n      }\n      if (newFile.size > maxSize) {\n        showMessage(true, \"error\", \"File size must be under 200KB.\");\n        return;\n      }\n      const confirmWhiteBg = window.confirm(\"Is the image background white?\");\n      if (!confirmWhiteBg) {\n        showMessage(true, \"error\", \"Please upload an image with a white background.\");\n        return;\n      }\n      setFile(newFile);\n      setPreviewURL(URL.createObjectURL(newFile));\n    }\n  };\n\n  // ✅ Clean up preview URL to prevent memory leaks\n  useEffect(() => {\n    return () => {\n      if (previewURL) {\n        URL.revokeObjectURL(previewURL);\n      }\n    };\n  }, [previewURL]);\n\n  // ✅ Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Prevent submission if Employee ID or RFID Badge Number is invalid or exists\n    if (employeeIdError || rfidError || existingEmployeeError) {\n      showMessage(true, \"error\", \"❌ Please fix the errors before submitting.\");\n      return;\n    }\n    if (!employee.employeeId || !employee.firstName || !employee.lastName || !employee.department) {\n      showMessage(true, \"error\", \"⚠️ Please fill in all required fields.\");\n      return;\n    }\n    const employeeData = new FormData();\n    Object.entries(employee).forEach(([key, value]) => {\n      employeeData.append(key, value);\n    });\n    if (file) {\n      employeeData.append(\"file\", file);\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/employees\", employeeData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      showMessage(true, \"success\", \"✅ Successfully added employee!\");\n      console.log(\"✅ Server Response:\", response.data);\n\n      // Reset form fields after success\n      setEmployee({\n        employeeId: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        department: \"\",\n        rfidBadgeNumber: \"\"\n      });\n      setFile(null);\n      setPreviewURL(null);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"❌ Error adding employee:\", error);\n      const errorMsg = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"❌ Failed to add employee. Please try again.\";\n      showMessage(true, \"error\", errorMsg);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"managePage\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"editForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgColumn\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: previewURL || \"http://localhost:5000/images/defaultPic.png\",\n              alt: \"Profile Pic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fileInput\",\n              className: \"fileUploadLabel\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-solid fa-circle-plus addProfileIcon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" Add Profile Pic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"fileInput\",\n              onChange: handleFileChange,\n              style: {\n                display: \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fieldsColumn\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fieldRow\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"fieldLabel\",\n                children: \"Employee ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"employeeId\",\n                value: employee.employeeId,\n                onChange: updateEmployee,\n                className: \"addInputs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), employeeIdError && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-msg\",\n                children: employeeIdError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, this), existingEmployeeError && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-msg\",\n                children: existingEmployeeError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fieldRow\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"fieldLabel\",\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"firstName\",\n                value: employee.firstName,\n                onChange: updateEmployee,\n                className: \"addInputs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fieldRow\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"fieldLabel\",\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"lastName\",\n                value: employee.lastName,\n                onChange: updateEmployee,\n                className: \"addInputs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fieldRow\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"fieldLabel\",\n                children: \"Department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"department\",\n                value: employee.department,\n                onChange: updateEmployee,\n                className: \"addInputs\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Department\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this), [\"Computer Science\", \"Electrical\", \"Mechanical\", \"Civil\", \"Electronics\"].map(dept => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: dept,\n                  children: dept\n                }, dept, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fieldRow\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"fieldLabel\",\n                children: \"RFID Badge Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"rfidBadgeNumber\",\n                value: employee.rfidBadgeNumber,\n                onChange: updateEmployee,\n                className: \"addInputs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), rfidError && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-msg\",\n                children: rfidError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btnContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bottomButton\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"bottomButton\",\n            onClick: () => navigate(\"/\"),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), message.show && /*#__PURE__*/_jsxDEV(Message, {\n          ...message,\n          removeMessage: showMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Add, \"W29vSq2UlgjawIFAr7JMsbHWmqQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Add;\nvar _c;\n$RefreshReg$(_c, \"Add\");","map":{"version":3,"names":["axios","React","useState","useCallback","useEffect","useNavigate","Header","Message","jsxDEV","_jsxDEV","Fragment","_Fragment","Add","_s","navigate","employee","setEmployee","employeeId","firstName","lastName","department","rfidBadgeNumber","file","setFile","previewURL","setPreviewURL","message","setMessage","show","msg","type","isFormDirty","setIsFormDirty","employeeIdError","setEmployeeIdError","rfidError","setRfidError","existingEmployeeError","setExistingEmployeeError","showMessage","setTimeout","updateEmployee","e","name","value","target","test","checkIfEmployeeExists","rfidPattern","checkIfRfidExists","prev","length","res","get","data","exists","error","console","handleFileChange","newFile","files","validTypes","maxSize","includes","size","confirmWhiteBg","window","confirm","URL","createObjectURL","revokeObjectURL","handleSubmit","preventDefault","employeeData","FormData","Object","entries","forEach","key","append","response","post","headers","log","_error$response","_error$response$data","errorMsg","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","src","alt","htmlFor","id","onChange","style","display","map","dept","onClick","removeMessage","_c","$RefreshReg$"],"sources":["D:/project/RFID-Based-Attendance-System/frontend/src/pages/add/Add.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Header from \"../../components/header/Header\";\r\nimport Message from \"../../components/message/Message\";\r\nimport \"./add.css\";\r\n\r\nexport default function Add() {\r\n  const navigate = useNavigate();\r\n\r\n  const [employee, setEmployee] = useState({\r\n    employeeId: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    department: \"\",\r\n    rfidBadgeNumber: \"\",\r\n  });\r\n\r\n  const [file, setFile] = useState(null);\r\n  const [previewURL, setPreviewURL] = useState(null);\r\n  const [message, setMessage] = useState({ show: false, msg: \"\", type: \"\" });\r\n  const [isFormDirty, setIsFormDirty] = useState(false);\r\n  const [employeeIdError, setEmployeeIdError] = useState(\"\"); \r\n  const [rfidError, setRfidError] = useState(\"\"); // Store RFID Badge Number validation error\r\n  const [existingEmployeeError, setExistingEmployeeError] = useState(\"\"); \r\n\r\n  // ✅ Function to show messages with auto-dismiss\r\n  const showMessage = useCallback((show = false, type = \"\", msg = \"\") => {\r\n    setMessage({ show, type, msg });\r\n    if (show) {\r\n      setTimeout(() => setMessage({ show: false, msg: \"\", type: \"\" }), 3000);\r\n    }\r\n  }, []);\r\n\r\n  // ✅ Handle input field changes\r\n  const updateEmployee = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    // Employee ID Validation (Only Numbers & 4 Digits)\r\n    if (name === \"employeeId\") {\r\n      if (!/^\\d{0,4}$/.test(value)) {\r\n        setEmployeeIdError(\"Employee ID must be exactly 4 numeric digits.\");\r\n      } else {\r\n        setEmployeeIdError(\"\");\r\n        checkIfEmployeeExists(value);\r\n      }\r\n    }\r\n\r\n    // RFID Badge Number Validation (4 Alphanumeric Characters, No Whitespaces)\r\n    if (name === \"rfidBadgeNumber\") {\r\n      const rfidPattern = /^[A-Za-z0-9]{4}$/;\r\n      if (!rfidPattern.test(value)) {\r\n        setRfidError(\"RFID Badge Number must be exactly 4 alphanumeric characters, no spaces.\");\r\n      } else {\r\n        setRfidError(\"\");\r\n        checkIfRfidExists(value);\r\n      }\r\n    }\r\n\r\n    setEmployee((prev) => ({ ...prev, [name]: value }));\r\n    setIsFormDirty(true);\r\n  };\r\n\r\n  // ✅ Check if Employee ID Already Exists\r\n  const checkIfEmployeeExists = async (employeeId) => {\r\n    try {\r\n      if (employeeId.length === 4) {\r\n        const res = await axios.get(`http://localhost:5000/api/employees/check-id/${employeeId}`);\r\n        if (res.data.exists) {\r\n          setExistingEmployeeError(\"❌ Employee ID already exists!\");\r\n        } else {\r\n          setExistingEmployeeError(\"\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Error checking Employee ID:\", error);\r\n    }\r\n  };\r\n\r\n  // ✅ Check if RFID Badge Number Already Exists\r\n  const checkIfRfidExists = async (rfidBadgeNumber) => {\r\n    try {\r\n      if (rfidBadgeNumber.length === 4) {\r\n        const res = await axios.get(`http://localhost:5000/api/employees/check-rfid/${rfidBadgeNumber}`);\r\n        if (res.data.exists) {\r\n          setRfidError(\"❌ RFID Badge Number already exists!\");\r\n        } else {\r\n          setRfidError(\"\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Error checking RFID Badge Number:\", error);\r\n    }\r\n  };\r\n\r\n  // ✅ Handle file input changes (Profile Picture)\r\n  const handleFileChange = (e) => {\r\n    const newFile = e.target.files[0];\r\n    if (newFile) {\r\n      const validTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\r\n      const maxSize = 200 * 1024; // 200KB max file size\r\n\r\n      if (!validTypes.includes(newFile.type)) {\r\n        showMessage(true, \"error\", \"Only image files are allowed (JPEG, PNG, GIF).\");\r\n        return;\r\n      }\r\n      if (newFile.size > maxSize) {\r\n        showMessage(true, \"error\", \"File size must be under 200KB.\");\r\n        return;\r\n      }\r\n\r\n      const confirmWhiteBg = window.confirm(\"Is the image background white?\");\r\n      if (!confirmWhiteBg) {\r\n        showMessage(true, \"error\", \"Please upload an image with a white background.\");\r\n        return;\r\n      }\r\n\r\n      setFile(newFile);\r\n      setPreviewURL(URL.createObjectURL(newFile));\r\n    }\r\n  };\r\n\r\n  // ✅ Clean up preview URL to prevent memory leaks\r\n  useEffect(() => {\r\n    return () => {\r\n      if (previewURL) {\r\n        URL.revokeObjectURL(previewURL);\r\n      }\r\n    };\r\n  }, [previewURL]);\r\n\r\n  // ✅ Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Prevent submission if Employee ID or RFID Badge Number is invalid or exists\r\n    if (employeeIdError || rfidError || existingEmployeeError) {\r\n      showMessage(true, \"error\", \"❌ Please fix the errors before submitting.\");\r\n      return;\r\n    }\r\n\r\n    if (!employee.employeeId || !employee.firstName || !employee.lastName || !employee.department) {\r\n      showMessage(true, \"error\", \"⚠️ Please fill in all required fields.\");\r\n      return;\r\n    }\r\n\r\n    const employeeData = new FormData();\r\n    Object.entries(employee).forEach(([key, value]) => {\r\n      employeeData.append(key, value);\r\n    });\r\n\r\n    if (file) {\r\n      employeeData.append(\"file\", file);\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/employees\", employeeData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      showMessage(true, \"success\", \"✅ Successfully added employee!\");\r\n      console.log(\"✅ Server Response:\", response.data);\r\n\r\n      // Reset form fields after success\r\n      setEmployee({\r\n        employeeId: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        department: \"\",\r\n        rfidBadgeNumber: \"\",\r\n      });\r\n      setFile(null);\r\n      setPreviewURL(null);\r\n    } catch (error) {\r\n      console.error(\"❌ Error adding employee:\", error);\r\n      const errorMsg = error.response?.data?.message || \"❌ Failed to add employee. Please try again.\";\r\n      showMessage(true, \"error\", errorMsg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"header\">\r\n        <h1>Add Employee</h1>\r\n      </div>\r\n      <section className=\"managePage\">\r\n        <form className=\"editForm\" onSubmit={handleSubmit}>\r\n          <div className=\"fields\">\r\n            <div className=\"imgColumn\">\r\n              <img src={previewURL || \"http://localhost:5000/images/defaultPic.png\"} alt=\"Profile Pic\" />\r\n              <label htmlFor=\"fileInput\" className=\"fileUploadLabel\">\r\n                <i className=\"fa-solid fa-circle-plus addProfileIcon\"></i>\r\n                <span> Add Profile Pic</span>\r\n              </label>\r\n              <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} style={{ display: \"none\" }} />\r\n            </div>\r\n            <div className=\"fieldsColumn\">\r\n              <div className=\"fieldRow\">\r\n                <label className=\"fieldLabel\">Employee ID</label>\r\n                <input type=\"text\" name=\"employeeId\" value={employee.employeeId} onChange={updateEmployee} className=\"addInputs\" />\r\n                {employeeIdError && <p className=\"error-msg\">{employeeIdError}</p>}\r\n                {existingEmployeeError && <p className=\"error-msg\">{existingEmployeeError}</p>}\r\n              </div>\r\n\r\n              <div className=\"fieldRow\">\r\n                <label className=\"fieldLabel\">First Name</label>\r\n                <input type=\"text\" name=\"firstName\" value={employee.firstName} onChange={updateEmployee} className=\"addInputs\" />\r\n              </div>\r\n\r\n              <div className=\"fieldRow\">\r\n                <label className=\"fieldLabel\">Last Name</label>\r\n                <input type=\"text\" name=\"lastName\" value={employee.lastName} onChange={updateEmployee} className=\"addInputs\" />\r\n              </div>\r\n\r\n              <div className=\"fieldRow\">\r\n                <label className=\"fieldLabel\">Department</label>\r\n                <select name=\"department\" value={employee.department} onChange={updateEmployee} className=\"addInputs\">\r\n                  <option value=\"\">Select Department</option>\r\n                  {[\"Computer Science\", \"Electrical\", \"Mechanical\", \"Civil\", \"Electronics\"].map((dept) => (\r\n                    <option key={dept} value={dept}>{dept}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"fieldRow\">\r\n                <label className=\"fieldLabel\">RFID Badge Number</label>\r\n                <input type=\"text\" name=\"rfidBadgeNumber\" value={employee.rfidBadgeNumber} onChange={updateEmployee} className=\"addInputs\" />\r\n                {rfidError && <p className=\"error-msg\">{rfidError}</p>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"btnContainer\">\r\n            <button type=\"submit\" className=\"bottomButton\">Add</button>\r\n            <button type=\"button\" className=\"bottomButton\" onClick={() => navigate(\"/\")}>Back</button>\r\n          </div>\r\n          {message.show && <Message {...message} removeMessage={showMessage} />}\r\n        </form>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}